WITH base
     AS (
     SELECT DISTINCT
            Area,
            IIF(ISNULL(DataComm, '') <> '', SUBSTRING(DataComm, 5, 2), SUBSTRING(datacomm_annoprec, 5, 2)) AS Mese
     FROM [anagraf].[dbo].[Commissioni]
     --WHERE DataComm BETWEEN 20230101 AND 20230331
     ),
     daRinnovare
     AS (
     SELECT Area,
            Mese,
            SUM(m.CommDaRinnovare) CommDaRinnovare,
            SUM(m.TOT_ImpoDaRinnovare) TOT_ImpoDaRinnovare
     FROM
     (
         SELECT [Area],
                IIF(ISNULL(DataComm, '') <> '', DATEPART(MONTH, DataComm), DATEPART(MONTH, datacomm_annoprec)) AS Mese,
                COUNT(id) CommDaRinnovare,
                SUM(isnull(Consegnato, 0)) TOT_ImpoDaRinnovare
         FROM [anagraf].[dbo].[Commissioni] c
         WHERE SUBSTRING(IIF(ISNULL(DataComm, '') <> '', datacomm, datacomm_annoprec), 5, 2) = '04'
               --OR SUBSTRING(IIF(ISNULL(DataComm, '') <> '', datacomm, datacomm_annoprec), 5, 2) = '02')
               AND consegnato > 9
               AND isnull(importo, '') = ''
               AND isnull(rintac, '') = ''
               AND isnull(biannA, '') = ''
               AND (stcontr IS NULL
                    OR stcontr NOT IN('A', 'AS', 'ART', 'NON_VALIDATO'))
         GROUP BY Area,
                  DataComm,
                  datacomm_annoprec
     ) AS m
     GROUP BY Area,
              mese),
     rinnovate
     AS (
     SELECT Area,
            Mese,
            SUM(m.CommRinnovate) CommRinnovate,
            SUM(m.TOT_ImpoRinnovato) TOT_ImpoRinnovato,
            SUM(m.TOT_Consegnato) TOT_Consegnato
     FROM
     (
         SELECT [Area],
                IIF(ISNULL(DataComm, '') <> '', DATEPART(MONTH, DataComm), DATEPART(MONTH, datacomm_annoprec)) AS Mese,
                COUNT(id) CommRinnovate,
                SUM(IIF(isnull(importo, 0) > 0, isnull(importo, 0), isnull(consegnato, 0))) TOT_ImpoRinnovato,
                SUM(isnull(consegnato, 0)) TOT_Consegnato
         FROM [anagraf].[dbo].[Commissioni] c
         WHERE((ISNULL(DataComm, '') BETWEEN 20230401 AND 20230430
                AND ISNULL(DataComm_annoprec, '') = '')
               OR (ISNULL(DataComm, '') BETWEEN 20230401 AND 20230430
                   AND SUBSTRING(DataComm_Annoprec, 5, 2) = '04')
               OR (ISNULL(DataComm_Annoprec, '') BETWEEN 20230401 AND 20230430
                   AND ISNULL(DataComm, '') = ''))
              AND consegnato > 9
               --AND isnull(importo, '') <> ''
              AND isnull(rintac, '') = ''
               --AND isnull(biannA, '') = ''
              AND (stcontr IS NULL
                   OR stcontr NOT IN('A', 'AS', 'ART', 'NON_VALIDATO'))
         GROUP BY Area,
                  DataComm,
                  datacomm_annoprec
     ) AS m
     GROUP BY Area,
              mese),
     consumato
     AS (
     SELECT Area,
            Mese,
            SUM(m.CommRinnovate) CommRinnovate,
            SUM(m.TOT_Consumato) TOT_Consumato
     FROM
     (
         SELECT [Area],
                IIF(ISNULL(DataComm, '') <> '', DATEPART(MONTH, DataComm), DATEPART(MONTH, datacomm_annoprec)) AS Mese,
                COUNT(id) CommRinnovate,
                SUM(IIF(isnull(importo, 0) > 0, isnull(consegnato, 0), 0)) TOT_Consumato
         FROM [anagraf].[dbo].[Commissioni] c
         WHERE((ISNULL(DataComm, '') BETWEEN 20230401 AND 20230430
                AND ISNULL(DataComm_annoprec, '') = '')
               OR (ISNULL(DataComm, '') BETWEEN 20230401 AND 20230430
                   AND SUBSTRING(DataComm_Annoprec, 5, 2) = '04')
               OR (ISNULL(DataComm_Annoprec, '') BETWEEN 20230401 AND 20230430
                   AND ISNULL(DataComm, '') = ''))
              AND consegnato > 9
               --AND isnull(importo, '') <> ''
              AND isnull(rintac, '') = ''
               --AND isnull(biannA, '') = ''
              AND (stcontr IS NULL
                   OR stcontr NOT IN('A', 'AS', 'ART', 'NON_VALIDATO'))
         GROUP BY Area,
                  DataComm,
                  datacomm_annoprec
     ) AS m
     GROUP BY Area,
              mese),
     altreRinnovate
     AS (
     SELECT Area,
            Mese,
            SUM(m.CommRinnovate) CommRinnovate,
            SUM(m.TOT_ImpoRinnovato) TOT_ImpoRinnovato
     FROM
     (
         SELECT [Area],
                IIF(ISNULL(DataComm, '') <> '', DATEPART(MONTH, DataComm), DATEPART(MONTH, datacomm_annoprec)) AS Mese,
                COUNT(id) CommRinnovate,
                SUM(isnull(importo, 0)) TOT_ImpoRinnovato
         FROM [estrazioni].[dbo].[Commissioni] c
         WHERE ISNULL(DataComm, '') BETWEEN 20230401 AND 20230430
				 --AND (DataComm_Annoprec < 20230101 or DataComm_Annoprec > 20230228)
               AND SUBSTRING(DataComm_Annoprec, 5, 2) NOT IN('04')
         AND consegnato > 9
               --AND isnull(importo, '') <> ''
         AND isnull(rintac, '') = ''
               --AND isnull(biannA, '') = ''
         AND (stcontr IS NULL
              OR stcontr NOT IN('A', 'AS', 'ART', 'NON_VALIDATO'))
         GROUP BY Area,
                  DataComm,
                  datacomm_annoprec
     ) AS m
     GROUP BY Area,
              mese),
     daRinnovareSucc
     AS (
     SELECT Area,
            Mese,
            SUM(m.CommDaRinnovareSucc) CommDaRinnovareSucc,
            SUM(m.TOT_ImpoDaRinnovareSucc) TOT_ImpoDaRinnovareSucc
     FROM
     (
         SELECT [Area],
                IIF(ISNULL(DataComm, '') <> '', DATEPART(MONTH, DataComm), DATEPART(MONTH, datacomm_annoprec)) AS Mese,
                COUNT(id) CommDaRinnovareSucc,
                SUM(isnull(Consegnato, 0)) TOT_ImpoDaRinnovareSucc
         FROM [anagraf].[dbo].[Commissioni] c
         WHERE SUBSTRING(IIF(ISNULL(DataComm, '') <> '', datacomm, datacomm_annoprec), 5, 2) = '05'
               AND consegnato > 9
               AND isnull(importo, '') = ''
               AND isnull(rintac, '') = ''
               AND isnull(biannA, '') = ''
               AND (stcontr IS NULL
                    OR stcontr NOT IN('A', 'AS', 'ART', 'NON_VALIDATO'))
         GROUP BY Area,
                  DataComm,
                  datacomm_annoprec
     ) AS m
     GROUP BY Area,
              mese)
     SELECT base.Area,
            base.Mese,
            SUM(isnull(daRinnovare.CommDaRinnovare, 0)) + SUM(isnull(rinnovate.CommRinnovate, 0)) CommDaRinnovare,
            SUM(isnull(daRinnovare.TOT_ImpoDaRinnovare, 0)) + SUM(isnull(rinnovate.TOT_Consegnato, 0)) TOT_ImpoDaRinnovare,
            SUM(isnull(rinnovate.CommRinnovate, 0)) CommRinnovate,
            SUM(isnull(rinnovate.TOT_ImpoRinnovato, 0)) TOT_ImpoRinnovato,
            SUM(isnull(consumato.TOT_Consumato, 0)) TOT_Consumato,
            SUM(isnull(altreRinnovate.CommRinnovate, 0)) AltreCommRinnovate,
            SUM(isnull(altreRinnovate.TOT_ImpoRinnovato, 0)) AltroTOT_ImpoRinnovato,
            IIF(SUM(rinnovate.CommRinnovate) * 100 / (SUM(daRinnovare.CommDaRinnovare) + SUM(rinnovate.CommRinnovate)) <> 0, CONCAT(SUM(rinnovate.CommRinnovate) * 100 / (SUM(daRinnovare.CommDaRinnovare) + SUM(rinnovate.CommRinnovate)), '%'), '-') PercCommRinn,
            REPLACE(IIF(SUM(rinnovate.TOT_ImpoRinnovato) * 100 / (SUM(daRinnovare.TOT_ImpoDaRinnovare) + SUM(rinnovate.TOT_ImpoRinnovato)) <> 0, CONCAT(SUM(rinnovate.TOT_ImpoRinnovato) * 100 / (SUM(daRinnovare.TOT_ImpoDaRinnovare) + SUM(rinnovate.TOT_ImpoRinnovato)), '%'), '-'), '.', ',') PercImpoRinn,
            REPLACE(IIF(SUM(consumato.TOT_Consumato) * 100 / (SUM(daRinnovare.TOT_ImpoDaRinnovare) + SUM(consumato.TOT_Consumato)) <> 0, CONCAT(SUM(consumato.TOT_Consumato) * 100 / (SUM(daRinnovare.TOT_ImpoDaRinnovare) + SUM(consumato.TOT_Consumato)), '%'), '-'), '.', ',') PercConsumato,
            SUM(isnull(daRinnovareSucc.CommDaRinnovareSucc, 0)) CommDaRinnovareSucc,
            SUM(isnull(daRinnovareSucc.TOT_ImpoDaRinnovareSucc, 0)) TOT_ImpoDaRinnovareSucc
     FROM base
          LEFT JOIN daRinnovare ON base.Area = daRinnovare.Area
                                   AND base.mese = daRinnovare.mese
          LEFT JOIN rinnovate ON base.Area = rinnovate.Area
                                 AND base.mese = rinnovate.mese
          LEFT JOIN altreRinnovate ON base.Area = altreRinnovate.Area
                                      AND base.mese = altreRinnovate.mese
          LEFT JOIN daRinnovareSucc ON base.Area = daRinnovareSucc.Area
                                       AND base.mese = daRinnovareSucc.mese
          LEFT JOIN consumato ON base.Area = consumato.Area
                                 AND base.mese = consumato.mese
     WHERE base.area IS NOT NULL
           AND base.mese IN(04, 05)
     GROUP BY base.area,
              base.mese
     ORDER BY base.Mese,
              base.Area;